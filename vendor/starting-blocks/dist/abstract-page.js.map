{"version":3,"sources":["abstract-page.js"],"names":["AbstractPage","router","$cont","context","type","isHome","id","lazyload","getAttribute","ready","name","length","onResizeDebounce","onResize","bind","log","debug","init","initEvents","$link","find","not","bindedLinkClick","onLinkClick","externalLinkTarget","baseUrl","options","lazyloadEnabled","setTimeout","beforeLazyload","Lazyload","elements_selector","lazyloadClass","data_src","lazyloadSrcAttr","replace","data_srcset","lazyloadSrcSetAttr","callback_set","onLazyImageSet","callback_load","onLazyImageLoad","callback_processed","onLazyImageProcessed","blocks","$blocks","pageBlockClass","blockLength","initBlocks","ajaxEnabled","initAjax","pushFirstState","destroy","remove","destroyEvents","blockIndex","waitForImages","finished","onLoad","waitForAll","on","$window","off","e","loadDate","Date","loadDuration","loadBeginDate","nav","update","delay","minLoadDuration","onShowEnded","showEnded","loader","hide","show","document","body","formerPages","formerPage","formerPageDestroy","pop","onShow","gsap","to","opacity","duration","onComplete","transition","removeClass","pageClass","onHidden","addClass","objectTypeAttr","block","classFactory","getBlockInstance","eq","push","i","onPageReady","getBlockById","getBlockIndexById","getFirstBlockByType","getFirstBlockIndexByType","element","index","$links","linksLength","abstractBaseUrl","split","linkIndex","link","linkString","indexOf","charAt","target"],"mappings":"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","file":"abstract-page.js","sourcesContent":["/**\n * Copyright Â© 2016, Ambroise Maupate\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is furnished\n * to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n * IN THE SOFTWARE.\n *\n * @file abstract-page.js\n * @author Ambroise Maupate\n */\nimport log from \"loglevel\";\n// import TweenMax from \"TweenMax\";\nimport gsap from \"gsap\";\nimport waitForImages from \"waitForImages\";\nimport $ from \"jquery\";\nimport Lazyload from \"Lazyload\";\nimport { debounce } from \"utils/debounce\";\n\n/**\n * Base class for creating page implementations.\n *\n * **Do not instanciate this class directly, create a sub-class**.\n */\nexport class AbstractPage {\n    /**\n     * Base constructor for Pages.\n     *\n     * Do not override this method, override `init` method instead.\n     *\n     * @param  {Router}  router\n     * @param  {jQuery}  $cont\n     * @param  {String}  context\n     * @param  {String}  type\n     * @param  {Boolean} isHome\n     */\n    constructor(router, $cont, context, type, isHome) {\n        type = type || \"page\";\n\n        if (!$cont) {\n            throw \"AbstractPage need a $cont (JQuery) to be defined.\";\n        }\n        if (!router) {\n            throw \"AbstractPage need a Router instance to be defined.\";\n        }\n        /**\n         *\n         * @type {Router}\n         */\n        this.router = router;\n        /**\n         *\n         * @type {jQuery}\n         */\n        this.$cont = $cont;\n        /**\n         * @type {String}\n         */\n        this.id = $cont[0].id;\n        /**\n         * @type {String}\n         */\n        this.context = context;\n        /**\n         * @type {String}\n         */\n        this.type = type;\n        /**\n         * @type {Boolean}\n         */\n        this.isHome = isHome;\n        /**\n         * @type {Lazyload}\n         */\n        this.lazyload = null;\n\n        if (this.$cont[0].getAttribute(\"data-is-home\") == \"1\") {\n            this.isHome = true;\n        }\n\n        this.ready = false;\n\n        this.name = this.$cont.length\n            ? this.$cont[0].getAttribute(\"data-node-name\")\n            : \"\";\n\n        this.onResizeDebounce = debounce(this.onResize.bind(this), 50, false);\n\n        log.debug(\"â³ï¸ #\" + this.id + \"\\t\" + type);\n\n        this.init();\n        this.initEvents();\n    }\n\n    /**\n     * Initialize page.\n     *\n     * You should always extends this method in your child implementations instead\n     * of extending page constructor.\n     */\n    init() {\n        this.$link = this.$cont.find(\"a\").not('[target=\"_blank\"]');\n        this.bindedLinkClick = this.router.onLinkClick.bind(this.router);\n\n        // Add target blank on external link\n        if (this.$link.length) {\n            this.externalLinkTarget(this.$link, this.router.baseUrl);\n            this.$link = this.$cont.find(\"a\").not('[target=\"_blank\"]');\n        }\n\n        // --- Lazyload --- //\n        if (this.router.options.lazyloadEnabled) {\n            setTimeout(() => {\n                this.beforeLazyload();\n                this.lazyload = new Lazyload({\n                    elements_selector: \".\" + this.router.options.lazyloadClass,\n                    data_src: this.router.options.lazyloadSrcAttr.replace(\n                        \"data-\",\n                        \"\"\n                    ),\n                    data_srcset: this.router.options.lazyloadSrcSetAttr.replace(\n                        \"data-\",\n                        \"\"\n                    ),\n                    callback_set: this.onLazyImageSet.bind(this),\n                    callback_load: this.onLazyImageLoad.bind(this),\n                    callback_processed: this.onLazyImageProcessed.bind(this),\n                });\n            }, 0);\n        }\n\n        // --- Blocks --- //\n        this.blocks = [];\n        this.$blocks = this.$cont.find(this.router.options.pageBlockClass);\n        this.blockLength = this.$blocks.length;\n        if (this.blockLength) {\n            this.initBlocks();\n        }\n\n        // --- Context --- //\n        if (this.router.options.ajaxEnabled) {\n            if (this.context == \"ajax\") {\n                this.initAjax();\n            } else {\n                this.router.pushFirstState(this.isHome, this.type, this.name);\n            }\n        }\n    }\n\n    /**\n     * Destroy current page and all its blocks.\n     */\n    destroy() {\n        log.debug(\"ð #\" + this.id);\n        this.$cont.remove();\n        this.destroyEvents();\n        // --- Blocks --- //\n        if (this.blocks !== null) {\n            for (var blockIndex in this.blocks) {\n                this.blocks[blockIndex].destroy();\n            }\n        }\n        /*\n         * Remove Lazyload instance and listeners\n         */\n        if (null !== this.lazyload) {\n            this.lazyload.destroy();\n        }\n    }\n\n    /**\n     * Initialize basic events.\n     *\n     * Such as waitForImages and link click if you enabled Ajax navigation.\n     */\n    initEvents() {\n        if (this.$cont.find(\"img\").length) {\n            this.$cont.waitForImages({\n                finished: this.onLoad.bind(this),\n                waitForAll: true,\n            });\n        } else {\n            this.onLoad();\n        }\n\n        if (this.$link.length && this.router.options.ajaxEnabled) {\n            this.$link.on(\"click\", this.bindedLinkClick);\n        }\n\n        this.router.$window.on(\"resize\", this.onResizeDebounce);\n    }\n\n    /**\n     *\n     */\n    destroyEvents() {\n        this.$link.off(\"click\", this.bindedLinkClick);\n        this.router.$window.off(\"resize\", this.onResizeDebounce);\n    }\n\n    /**\n     * @param e\n     * @private\n     */\n    onLoad(e) {\n        this.loadDate = new Date();\n        this.loadDuration = this.loadDate - this.router.loadBeginDate;\n        this.router.nav.update(this);\n\n        const delay =\n            this.loadDuration > this.router.options.minLoadDuration\n                ? 0\n                : this.router.options.minLoadDuration - this.loadDuration;\n\n        // Hide loading\n        setTimeout(() => {\n            const onShowEnded = this.showEnded.bind(this);\n\n            this.ready = true;\n            this.router.loader.hide();\n\n            if (this.context == \"static\") {\n                this.show(onShowEnded);\n            } else if (this.context == \"ajax\") {\n                // Update body id\n                if (this.name !== \"\") document.body.id = this.name;\n                // Hide formerPages - show\n                if (this.router.formerPages.length > 0) {\n                    const formerPage =\n                        this.router.formerPages[\n                            this.router.formerPages.length - 1\n                        ];\n                    const formerPageDestroy =\n                        formerPage.destroy.bind(formerPage);\n\n                    /*\n                     * Very important,\n                     * DO NOT animate if there are more than 1 page\n                     * in destroy queue!\n                     */\n                    if (this.router.formerPages.length > 1) {\n                        formerPageDestroy();\n                    } else {\n                        formerPage.hide(formerPageDestroy);\n                    }\n                    this.router.formerPages.pop();\n                }\n\n                this.show(onShowEnded);\n            }\n        }, delay);\n    }\n\n    /**\n     * @param {Function} onShow\n     */\n    show(onShow) {\n        log.debug(\"â¶ï¸ #\" + this.id);\n\n        // Animate\n        gsap.to(this.$cont, {\n            opacity: 1,\n            duration: 0.6,\n            onComplete: () => {\n                if (typeof onShow !== \"undefined\") onShow();\n            },\n        });\n    }\n\n    /**\n     *\n     */\n    showEnded() {\n        this.router.transition = false;\n        this.$cont.removeClass(this.router.options.pageClass + \"-ajax\");\n        this.$cont.removeClass(\n            this.router.options.pageClass + \"-transitioning\"\n        );\n    }\n\n    /**\n     * @param {Function} onHidden\n     */\n    hide(onHidden) {\n        log.debug(\"âï¸ #\" + this.id);\n\n        gsap.to(this.$cont, {\n            opacity: 0,\n            duration: 0.6,\n            onComplete: () => {\n                if (typeof onHidden !== \"undefined\") onHidden();\n            },\n        });\n    }\n\n    initAjax() {\n        this.$cont.addClass(this.router.options.pageClass + \"-transitioning\");\n    }\n\n    /**\n     * @private\n     */\n    initBlocks() {\n        for (let blockIndex = 0; blockIndex < this.blockLength; blockIndex++) {\n            let type = this.$blocks[blockIndex].getAttribute(\n                    this.router.options.objectTypeAttr\n                ),\n                id = this.$blocks[blockIndex].id;\n\n            let block = this.router.classFactory.getBlockInstance(\n                type,\n                this,\n                this.$blocks.eq(blockIndex)\n            );\n            /*\n             * Prevent undefined blocks to be appended to block collection.\n             */\n            if (block) {\n                this.blocks.push(block);\n            }\n        }\n        /*\n         * Notify all blocks that page init is over.\n         */\n        for (let i = this.blocks.length - 1; i >= 0; i--) {\n            if (typeof this.blocks[i].onPageReady == \"function\")\n                this.blocks[i].onPageReady();\n        }\n    }\n\n    /**\n     * Get a page block instance from its `id`.\n     *\n     * @param  {String} id\n     * @return {AbstractBlock|null}\n     */\n    getBlockById(id) {\n        for (let i in this.blocks) {\n            if (\n                this.blocks[i] &&\n                this.blocks[i].id &&\n                this.blocks[i].id == id\n            ) {\n                return this.blocks[i];\n            }\n        }\n        return null;\n    }\n\n    /**\n     * Get a page block index from its `id`.\n     *\n     * @param  {String} id\n     * @return {AbstractBlock|null}\n     */\n    getBlockIndexById(id) {\n        for (let i in this.blocks) {\n            if (\n                this.blocks[i] &&\n                this.blocks[i].id &&\n                this.blocks[i].id == id\n            ) {\n                return i;\n            }\n        }\n        return null;\n    }\n\n    /**\n     * Get the first page block instance from its `type`.\n     *\n     * @param  {String} type\n     * @return {AbstractBlock|null}\n     */\n    getFirstBlockByType(type) {\n        for (let i in this.blocks) {\n            if (\n                this.blocks[i] &&\n                this.blocks[i].type &&\n                this.blocks[i].type == type\n            ) {\n                return this.blocks[i];\n            }\n        }\n        return null;\n    }\n\n    /**\n     * Get the first page block index from its `type`.\n     *\n     * @param  {String} type\n     * @return {AbstractBlock|null}\n     */\n    getFirstBlockIndexByType(type) {\n        for (let i in this.blocks) {\n            if (\n                this.blocks[i] &&\n                this.blocks[i].type &&\n                this.blocks[i].type == type\n            ) {\n                return i;\n            }\n        }\n        return null;\n    }\n\n    /**\n     * @abstract\n     */\n    onResize() {}\n\n    /**\n     * Called before init lazyload images.\n     *\n     * @abstract\n     */\n    beforeLazyload() {}\n\n    /**\n     * After image src switched.\n     *\n     * @abstract\n     * @param {HTMLImage} element\n     */\n    onLazyImageSet(element) {\n        log.debug(\"\\tð¼ Â«\" + element.id + \"Â» set\");\n    }\n\n    /**\n     * After lazyload image loaded.\n     *\n     * @abstract\n     * @param {HTMLImage} element\n     */\n    onLazyImageLoad(element) {\n        log.debug(\"\\tð¼ Â«\" + element.id + \"Â» load\");\n    }\n\n    /**\n     * Before lazyload.\n     *\n     * @abstract\n     */\n    onLazyImageProcessed(index) {\n        log.debug(\"\\tð¼ Lazy load processed\");\n    }\n\n    /**\n     * Add target blank to external links.\n     *\n     * @param  {JQuery} $links\n     * @param  {String} baseUrl\n     */\n    externalLinkTarget($links, baseUrl) {\n        const linksLength = $links.length;\n        let abstractBaseUrl = baseUrl.split(\"://\");\n\n        abstractBaseUrl = abstractBaseUrl[1];\n\n        for (let linkIndex = 0; linkIndex < linksLength; linkIndex++) {\n            const link = $links[linkIndex];\n            /*\n             * Use RAW href data not to automatically\n             * get protocol and domain in string\n             */\n            const linkString = link.getAttribute(\"href\");\n            if (\n                linkString.indexOf(abstractBaseUrl) == -1 &&\n                linkString.indexOf(\"javascript\") == -1 &&\n                linkString.indexOf(\"mailto:\") == -1 &&\n                linkString.charAt(0) != \"/\" &&\n                linkString.charAt(0) != \"#\"\n            ) {\n                $links[linkIndex].target = \"_blank\";\n            }\n        }\n    }\n}\n"]}