{"version":3,"sources":["abstract-nav.js"],"names":["AbstractNav","$cont","update","page","initEvents","router"],"mappings":";;;;;;;;;;;;;MA8BaA,W,WAAAA,W;;AAET;;;;;;AAMA,2BAAc;AAAA;;AACV;;;;;AAKA,WAAKC,KAAL,GAAa,IAAb;AACH;;AAED;;;;;;;;0BAMAC,M,mBAAOC,I,EAAM;AACT,UAAI,CAACA,IAAL,EAAW;AACP,cAAM,wCAAN;AACH;;AAED,WAAKA,IAAL,GAAYA,IAAZ;AACH,K;;AAED;;;;;;;;0BAMAC,U,uBAAWC,M,EAAQ;AACf,UAAI,CAACA,MAAL,EAAa;AACT,cAAM,8CAAN;AACH;AACJ,K","file":"abstract-nav.js","sourcesContent":["/**\n * Copyright Â© 2016, Ambroise Maupate\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is furnished\n * to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n * IN THE SOFTWARE.\n *\n * @file abstract-nav.js\n * @author Ambroise Maupate\n */\n\n/**\n * Base class for handling your website main navigation.\n *\n * **Do not instanciate this class directly, create a sub-class**.\n */\nexport class AbstractNav {\n\n    /**\n     * Interface for a navigation element.\n     *\n     * Any child implementations must implements\n     * update method.\n     */\n    constructor() {\n        /**\n         * Page DOM section.\n         *\n         * @type {jQuery}\n         */\n        this.$cont = null;\n    }\n\n    /**\n     * Update navigation state against a DOM container.\n     *\n     * @abstract\n     * @param {AbstractPage} page\n     */\n    update(page) {\n        if (!page) {\n            throw \"Nav update method needs a Page object.\";\n        }\n\n        this.page = page;\n    }\n\n    /**\n     * Bind navigation against router.\n     *\n     * @param {Router} router\n     * @abstract\n     */\n    initEvents(router) {\n        if (!router) {\n            throw \"Nav initEvents method needs a Router object.\";\n        }\n    }\n}\n"]}