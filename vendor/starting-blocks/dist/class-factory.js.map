{"version":3,"sources":["class-factory.js"],"names":["ClassFactory","getPageInstance","nodeTypeName","router","$cont","context","nodeType","isHome","log","debug","Home","info","Page","getBlockInstance","page","MapBlock","AbstractBlock"],"mappings":";;;;;;;;;;;;;;;;;;;;;;QAoCaA,Y,WAAAA,Y;;;;;AAET;;;;;;;;;;;;;+BAaAC,e,4BAAgBC,Y,EAAcC,M,EAAQC,K,EAAOC,O,EAASC,Q,EAAUC,M,EAAQ;AACpE,oBAAOL,YAAP;AACI,qBAAK,MAAL;AACIM,uCAAIC,KAAJ,CAAU,iBAAV;AACA,2BAAO,IAAIC,UAAJ,CAASP,MAAT,EAAiBC,KAAjB,EAAwBC,OAAxB,EAAiCC,QAAjC,EAA2CC,MAA3C,CAAP;AACJ;AACIC,uCAAIG,IAAJ,CAAS,MAAMT,YAAN,GAAqB,qCAA9B;AACA,2BAAO,IAAIU,UAAJ,CAAST,MAAT,EAAiBC,KAAjB,EAAwBC,OAAxB,EAAiCC,QAAjC,EAA2CC,MAA3C,CAAP;AANR;AAQH,S;;AAED;;;;;;;;;;;;;;+BAYAM,gB,6BAAiBX,Y,EAAcY,I,EAAMV,K,EAAO;AACxC,oBAAOF,YAAP;AACI,qBAAK,WAAL;AACI,2BAAO,IAAIa,QAAJ,CAAaD,IAAb,EAAmBV,KAAnB,EAA0BF,YAA1B,CAAP;AACJ,qBAAK,OAAL;AACI;AACA,2BAAO,IAAIc,4BAAJ,CAAkBF,IAAlB,EAAwBV,KAAxB,EAA+BF,YAA/B,CAAP;AALR;AAOH,S","file":"class-factory.js","sourcesContent":["/**\n * Copyright © 2016, Ambroise Maupate\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is furnished\n * to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n * IN THE SOFTWARE.\n *\n * @file class-factory.js\n * @author Ambroise Maupate\n */\nimport log from \"loglevel\";\nimport {Page} from \"pages/page\";\nimport {Home} from \"pages/home\";\nimport {AbstractBlock} from \"abstract-block\";\n\n/**\n * Router mapper class.\n *\n * This class maps your `data-node-type` with your *ES6* classes.\n *\n * **You must define your own ClassFactory for each of your projects.**.\n */\nexport class ClassFactory\n{\n    /**\n     * Returns an `AbstractPage` child class instance\n     * according to the `nodeTypeName` or an `AbstractPage` as default.\n     *\n     * @param  {String}  nodeTypeName\n     * @param  {Router}  router\n     * @param  {jQuery}  $cont\n     * @param  {String}  context\n     * @param  {String}  nodeType\n     * @param  {Boolean} isHome\n     *\n     * @return {AbstractPage}\n     */\n    getPageInstance(nodeTypeName, router, $cont, context, nodeType, isHome) {\n        switch(nodeTypeName){\n            case 'home':\n                log.debug('Create new home');\n                return new Home(router, $cont, context, nodeType, isHome);\n            default:\n                log.info('\"' + nodeTypeName + '\" has no defined route, using Page.');\n                return new Page(router, $cont, context, nodeType, isHome);\n        }\n    }\n\n    /**\n     * Returns an `AbstractBlock` child class instance\n     * according to the nodeTypeName or an AbstractBlock as default.\n     *\n     * Comment out the default case if you don’t want a default block to be instantiated\n     * for each block.\n     *\n     * @param  {String}  nodeTypeName\n     * @param  {AbstractPage} page\n     * @param  {jQuery}  $cont\n     * @return {AbstractBlock}\n     */\n    getBlockInstance(nodeTypeName, page, $cont) {\n        switch(nodeTypeName){\n            case 'map-block':\n                return new MapBlock(page, $cont, nodeTypeName);\n            case 'block':\n                //log.info('\\t\"' + nodeTypeName + '\" has no defined route, using AbstractBlock.');\n                return new AbstractBlock(page, $cont, nodeTypeName);\n        }\n    }\n}\n"]}