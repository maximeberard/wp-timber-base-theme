{"version":3,"sources":["blocks/in-view-block.js"],"names":["InviewBlock","init","page","context","delayInView","setTimeout","initInView","inViewDuration","inViewOffset","$cont","getAttribute","index","Number","initEvents","destroyEvents","BootstrapMedia","isMinSM","waypoint","isInView","Waypoint","element","handler","onInView","bind","offset","Utils","addClass","inViewAnimation","DefaultBlock"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QAcaA,W,WAAAA,W;;;;;;;;;8BAETC,I,mBAAO;AAAA;;AACH,oCAAMA,IAAN;;AAEA;;AAEA,gBAAI,KAAKC,IAAL,CAAUC,OAAV,IAAqB,QAAzB,EAAmC;AAC/B,oBAAIC,cAAc,GAAlB,CAD+B,CACR;AACvBC,2BAAW,YAAM;AACb,2BAAKC,UAAL;AACA;AACH,iBAHD,EAGGF,WAHH;AAIH;;AAED,iBAAKG,cAAL,GAAsB,GAAtB;;AAEA,iBAAKC,YAAL,GAAoB,KAApB;;AAEA,gBAAI,KAAKC,KAAL,CAAW,CAAX,EAAcC,YAAd,CAA2B,oBAA3B,CAAJ,EAAqD;AACjD,qBAAKF,YAAL,GAAoB,KAAKC,KAAL,CAAW,CAAX,EAAcC,YAAd,CAA2B,oBAA3B,CAApB;AACH;;AAED,iBAAKC,KAAL,GAAaC,OAAO,KAAKH,KAAL,CAAW,CAAX,EAAcC,YAAd,CAA2B,YAA3B,CAAP,CAAb;AACH,S;;8BAEDG,U,yBAAc;AACV,oCAAMA,UAAN;AACH,S;;8BAEDC,a,4BAAiB;AACb,oCAAMA,aAAN;AACH,S;;8BAEDR,U,yBAAc;AACV;;AAEA,gBAAIS,+BAAeC,OAAf,EAAJ,EAA8B;AAAE;;AAE5B,qBAAKC,QAAL,GAAgB,EAAhB;AACA,qBAAKC,QAAL,GAAgB,KAAhB;;AAEA;AACA;AACA;;AAEA,qBAAKD,QAAL,GAAgB,IAAIE,QAAJ,CAAa;AACzBC,6BAAS,KAAKX,KAAL,CAAW,CAAX,CADgB;AAEzBY,6BAAS,KAAKC,QAAL,CAAcC,IAAd,CAAmB,IAAnB,CAFgB;AAGzBC,4BAAQ,KAAKhB;AAHY,iBAAb,CAAhB;AAKH;AACJ,S;;8BAEDc,Q,qBAAUX,K,EAAO;AACb;;AAEA,gBAAG,CAAC,KAAKO,QAAT,EAAkB;AACd,qBAAKA,QAAL,GAAgB,IAAhB;AACAO,6BAAMC,QAAN,CAAe,KAAKjB,KAAL,CAAW,CAAX,CAAf,EAA8B,SAA9B;AACA;AACA,qBAAKkB,eAAL;AACH;AACD;AACH,S;;8BAEDA,e,8BAAmB;AAAA;;AACf;;AAEAtB,uBAAW,YAAM;AACboB,6BAAMC,QAAN,CAAe,OAAKjB,KAAL,CAAW,CAAX,CAAf,EAA8B,kBAA9B;AACH,aAFD,EAEG,KAAKF,cAFR;AAGH,S;;;MAxE4BqB,0B","file":"in-view-block.js","sourcesContent":["/**\n * Copyright Maxime BÃ©rard 2016\n *\n * @file in-view-block.js\n * @copyright Maxime BÃ©rard 2016\n * @author Maxime BÃ©rard\n */\n\nimport $ from 'jquery';\nimport {Utils} from \"utils/utils\";\nimport {waypoint} from 'waypoint';\nimport {DefaultBlock} from 'blocks/default-block';\nimport {BootstrapMedia} from \"utils/bootstrapMedia\";\n\nexport class InviewBlock extends DefaultBlock\n{\n    init() {\n        super.init();\n\n        // console.log('ðŸ‘€ In view block');\n\n        if (this.page.context == 'static') {\n            let delayInView = 500; // (this.page.context == 'static') ? 500 : 1500;\n            setTimeout(() => {\n                this.initInView();\n                // this.page.router.$window.trigger('resize');\n            }, delayInView);\n        }\n\n        this.inViewDuration = 800;\n\n        this.inViewOffset = '75%';\n\n        if (this.$cont[0].getAttribute('data-inview-offset')){\n            this.inViewOffset = this.$cont[0].getAttribute('data-inview-offset');\n        }\n\n        this.index = Number(this.$cont[0].getAttribute('data-index'));\n    }\n\n    initEvents () {\n        super.initEvents();\n    }\n\n    destroyEvents () {\n        super.destroyEvents();\n    }\n    \n    initInView () {\n        // super.initInView();\n\n        if (BootstrapMedia.isMinSM()) { // this.page.router.deviceType == 'desktop' && \n\n            this.waypoint = [];\n            this.isInView = false;\n\n            // console.log('ðŸ‘€ INVIEW - '+this.id+' - Init');\n            // console.log('offset : '+this.inViewOffset);\n            // console.log('---');\n\n            this.waypoint = new Waypoint({\n                element: this.$cont[0],\n                handler: this.onInView.bind(this),\n                offset: this.inViewOffset\n            });\n        }\n    }\n\n    onInView (index) {\n        // console.log('ðŸ‘€ INVIEW - '+this.id+' - on view');\n\n        if(!this.isInView){\n            this.isInView = true;\n            Utils.addClass(this.$cont[0], 'in-view');\n            // console.log('ðŸ‘€ INVIEW - '+this.id+' - OK');\n            this.inViewAnimation();\n        }\n        // else console.log('< already Inview');\n    }\n\n    inViewAnimation () {\n        // console.log('ðŸ‘€ INVIEW - '+this.id+' - Animation');\n        \n        setTimeout(() => {\n            Utils.addClass(this.$cont[0], 'in-view-finished');\n        }, this.inViewDuration);\n    }\n}\n"]}