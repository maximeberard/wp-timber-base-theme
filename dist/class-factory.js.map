{"version":3,"sources":["class-factory.js"],"names":["ClassFactory","getPageInstance","nodeTypeName","router","$cont","context","nodeType","isHome","log","debug","Home","info","Page","getBlockInstance","page","InviewBlock"],"mappings":";;;;;;;;;;;;;;;;;;;;;;QAgBaA,Y,WAAAA,Y;;;;;AAET;;;;;;;;;;;;+BAYAC,e,4BAAgBC,Y,EAAcC,M,EAAQC,K,EAAOC,O,EAASC,Q,EAAUC,M,EAAQ;AACpE,oBAAOL,YAAP;AACI,qBAAK,MAAL;AACIM,uCAAIC,KAAJ,CAAU,iBAAV;AACA,2BAAO,IAAIC,UAAJ,CAASP,MAAT,EAAiBC,KAAjB,EAAwBC,OAAxB,EAAiCC,QAAjC,EAA2CC,MAA3C,CAAP;AACJ;AACIC,uCAAIG,IAAJ,CAAS,MAAMT,YAAN,GAAqB,qCAA9B;AACA,2BAAO,IAAIU,UAAJ,CAAST,MAAT,EAAiBC,KAAjB,EAAwBC,OAAxB,EAAiCC,QAAjC,EAA2CC,MAA3C,CAAP;AANR;AAQH,S;;AAED;;;;;;;;;;;+BASAM,gB,6BAAiBX,Y,EAAcY,I,EAAMV,K,EAAO;AACxC,oBAAOF,YAAP;AACI,qBAAK,eAAL;AACI,2BAAO,IAAIa,wBAAJ,CAAgBD,IAAhB,EAAsBV,KAAtB,EAA6BF,YAA7B,CAAP;AACJ;;AAEA;AACI;;AANR;AASH,S","file":"class-factory.js","sourcesContent":["/**\n * Copyright © 2016, Maxime Bérard\n *\n * @file class-factory.js\n * @author Maxime Bérard\n */\nimport log from \"loglevel\";\nimport {Page} from \"pages/page\";\nimport {Home} from \"pages/home\";\nimport {AbstractBlock} from \"abstract-block\";\nimport {InviewBlock} from \"blocks/in-view-block\";\n// import {ContactBlock} from \"blocks/contact-block\";\n\n/**\n * This class need to be redefined for each of your projects.\n */\nexport class ClassFactory\n{\n    /**\n     * Returns an AbstractPage child class instance\n     * according to the nodeTypeName or an AbstractPage as default.\n     *\n     * @param  {String}  nodeTypeName\n     * @param  {Router}  router\n     * @param  {jQuery}  $cont\n     * @param  {String}  context\n     * @param  {String}  nodeType\n     * @param  {Boolean} isHome\n     * @return {AbstractPage}\n     */\n    getPageInstance(nodeTypeName, router, $cont, context, nodeType, isHome) {\n        switch(nodeTypeName){\n            case 'home':\n                log.debug('Create new home');\n                return new Home(router, $cont, context, nodeType, isHome);\n            default:\n                log.info('\"' + nodeTypeName + '\" has no defined route, using Page.');\n                return new Page(router, $cont, context, nodeType, isHome);\n        }\n    }\n\n    /**\n     * Returns an AbstractBlock child class instance\n     * according to the nodeTypeName or an AbstractBlock as default.\n     *\n     * @param  {String}  nodeTypeName\n     * @param  {AbstractPage} page\n     * @param  {jQuery}  $cont\n     * @return {AbstractBlock}\n     */\n    getBlockInstance(nodeTypeName, page, $cont) {\n        switch(nodeTypeName){\n            case 'in-view-block':\n                return new InviewBlock(page, $cont, nodeTypeName);\n            /*case 'contact-block':\n                return new ContactBlock(page, $cont, nodeTypeName);*/\n            default:\n                /*log.info('    \"' + nodeTypeName + '\" has no defined route, using AbstractBlock.');\n                return new AbstractBlock(page, $cont, nodeTypeName);*/\n        }\n    }\n}\n"]}